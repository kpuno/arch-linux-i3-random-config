<!DOCTYPE HTML>
<html lang="en-US" manifest="./manifest.appcache">
    
    <head>
        
        <meta charset="UTF-8">
        <title>Settings and configs | Human JavaScript</title>
        <meta content="text/html; charset=utf-8" http-equiv="Content-Type">
        <meta name="description" content="">
        <meta name="generator" content="GitBook 0.5.2">
        <meta name="HandheldFriendly" content="true"/>
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-status-bar-style" content="black">
        <link rel="shortcut icon" href="gitbook/images/favicon.ico" type="image/x-icon">
        <script>
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
          ga('create', 'UA-1196801-11', 'auto');
          ga('send', 'pageview');
        </script>
        <script>
          !function(g,s,q,r,d){r=g[r]=g[r]||function(){(r.q=r.q||[]).push(
          arguments)};d=s.createElement(q);q=s.getElementsByTagName(q)[0];
          d.src='http://d1l6p2sc9645hc.cloudfront.net/tracker.js';q.parentNode.
          insertBefore(d,q)}(window,document,'script','_gs');
          _gs('GSN-555504-T', false);
          _gs('set', 'cookieDomain', '.humanjavascript.com');
          _gs('track');
        </script>
        
    
    
    <meta name="author" content="HenrikJoreteg">
    
    
    <link rel="next" href="./ch13-caveats.html" />
    
    
    <link rel="prev" href="./ch11-testing-and-QA.html" />
    

        
    </head>
    <body>
        
        
<link rel="stylesheet" href="gitbook/style.css">


        
    <div class="book" data-github="HenrikJoreteg/human-javascript" data-level="13" data-basepath="." data-revision="1428642973331">
    <div class="book-header">
    <!-- Actions Left -->
    <a href="#" class="btn pull-left toggle-summary" aria-label="Toggle summary"><i class="fa fa-align-justify"></i></a>
    <a href="#" class="btn pull-left toggle-search" aria-label="Toggle search"><i class="fa fa-search"></i></a>
    <span id="font-settings-wrapper">
        <a href="#" class="btn pull-left toggle-font-settings" aria-label="Toggle font settings"><i class="fa fa-font"></i>
        </a>
        <div class="dropdown-menu font-settings">
    <div class="dropdown-caret">
        <span class="caret-outer"></span>
        <span class="caret-inner"></span>
    </div>

    <div class="btn-group btn-block">
        <button id="reduce-font-size" class="btn btn-default">A</button>
        <button id="enlarge-font-size" class="btn btn-default">A</button>
    </div>

    <ul class="list-group font-family-list">
        <li class="list-group-item" data-font="0">Serif</li>
        <li class="list-group-item" data-font="1">Sans</li>
    </ul>

    <div class="btn-group btn-group-xs btn-block color-theme-list">
        <button type="button" class="btn btn-default" id="color-theme-preview-0" data-theme="0">White</button>
        <button type="button" class="btn btn-default" id="color-theme-preview-1" data-theme="1">Sepia</button>
        <button type="button" class="btn btn-default" id="color-theme-preview-2" data-theme="2">Night</button>
    </div>
</div>

    </span>

    <!-- Actions Right -->
    
    <a href="#" target="_blank" class="btn pull-right google-plus-sharing-link sharing-link" data-sharing="google-plus" aria-label="Share on Google Plus"><i class="fa fa-google-plus"></i></a>
    
    
    <a href="#" target="_blank" class="btn pull-right facebook-sharing-link sharing-link" data-sharing="facebook" aria-label="Share on Facebook"><i class="fa fa-facebook"></i></a>
    
    
    <a href="http://twitter.com/home?status=I'm%20reading%20Human%20JavaScript%20by%20%40HenrikJoreteg.%0A%0AA%20free%20online%20book%20on%20building%20sane%20JavaScript%20apps%3A%20http%3A%2F%2Fread.humanjavascript.com" target="_blank" class="btn pull-right twitter-sharing-link sharing-link" aria-label="Share on Twitter"><i class="fa fa-twitter"></i></a>
    

    <!-- Title -->
    <h1>
        <i class="fa fa-spinner fa-spin"></i>
        <a href="./" >Human JavaScript</a>
    </h1>
</div>

    

<div class="book-summary">
    <div class="book-search">
        <input type="text" placeholder="Search" class="form-control" />
    </div>
    <ul class="summary">
        <li>
            <a href="https://gumroad.com/l/humanjs" target="blank">Buy the e-book</a>
        </li>
        <li>
            <a href="http://learn.humanjavascript.com" target="blank">Video Tutorials</a>
        </li>
        <li>
            <a href="http://ampersandjs.com" target="blank">Ampersand.js</a>
        </li>
        <li>
            <a href="http://twitter.com/henrikjoreteg" target="blank">Follow @HenrikJoreteg</a>
        </li>

        <li class="divider"></li>

        <li data-level="0" data-path="index.html">
            <a href="./"><i class="fa fa-check"></i> Introduction</a>
        </li>
        
    
        <li class="chapter " data-level="1" data-path="ch00-foreword.html">
            
            <a href="./ch00-foreword.html">
                <i class="fa fa-check"></i> <b>1.</b> Foreword by Jan Lehnardt
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="2" data-path="ch01-introduction.html">
            
            <a href="./ch01-introduction.html">
                <i class="fa fa-check"></i> <b>2.</b> Introduction
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="3" data-path="ch02-the-big-decision.html">
            
            <a href="./ch02-the-big-decision.html">
                <i class="fa fa-check"></i> <b>3.</b> Client or server? Go big or go home.
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="4" data-path="ch03-code-for-humans.html">
            
            <a href="./ch03-code-for-humans.html">
                <i class="fa fa-check"></i> <b>4.</b> Writing code for humans.
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="5" data-path="ch04-organizing-your-code.html">
            
            <a href="./ch04-organizing-your-code.html">
                <i class="fa fa-check"></i> <b>5.</b> No more clientside spaghetti. Organizing your code.
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="6" data-path="ch05-eventification.html">
            
            <a href="./ch05-eventification.html">
                <i class="fa fa-check"></i> <b>6.</b> Using events: Modules talking to modules
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="7" data-path="ch06-models.html">
            
            <a href="./ch06-models.html">
                <i class="fa fa-check"></i> <b>7.</b> Models
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="8" data-path="ch07-views.html">
            
            <a href="./ch07-views.html">
                <i class="fa fa-check"></i> <b>8.</b> Views and the DOM
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="9" data-path="ch08-templating.html">
            
            <a href="./ch08-templating.html">
                <i class="fa fa-check"></i> <b>9.</b> Handling templates
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="10" data-path="ch09-clientside-routing.html">
            
            <a href="./ch09-clientside-routing.html">
                <i class="fa fa-check"></i> <b>10.</b> Clientside Routing
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="11" data-path="ch10-launch-sequence.html">
            
            <a href="./ch10-launch-sequence.html">
                <i class="fa fa-check"></i> <b>11.</b> 3... 2... 1... Blastoff!
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="12" data-path="ch11-testing-and-QA.html">
            
            <a href="./ch11-testing-and-QA.html">
                <i class="fa fa-check"></i> <b>12.</b> Testing and QA
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="13" data-path="ch12-settings-and-configs.html">
            
            <a href="./ch12-settings-and-configs.html">
                <i class="fa fa-check"></i> <b>13.</b> Settings and configs
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="14" data-path="ch13-caveats.html">
            
            <a href="./ch13-caveats.html">
                <i class="fa fa-check"></i> <b>14.</b> Caveats/Gotchas
            </a>
            
            
        </li>
    
        <li class="chapter " data-level="15" data-path="ch14-conclusion.html">
            
            <a href="./ch14-conclusion.html">
                <i class="fa fa-check"></i> <b>15.</b> A few closing thoughts
            </a>
            
            
        </li>
    


        
        <li class="divider"></li>
        <li>
            <a href="http://www.gitbook.io/" target="blank" class="gitbook-link">Generated using GitBook</a>
        </li>
        
    </ul>
</div>

    <div class="book-body">
        <div class="body-inner">
            <div class="page-wrapper" tabindex="-1">
                <div class="book-progress">
    <div class="bar">
        <div class="inner" style="width: 86.66666666666667%;min-width: 80%;"></div>
    </div>
    <div class="chapters">
    
        <a href="./index.html" title="Introduction" class="chapter done new-chapter" data-progress="0" style="left: 0%;"></a>
    
        <a href="./ch00-foreword.html" title="Foreword by Jan Lehnardt" class="chapter done new-chapter" data-progress="1" style="left: 6.666666666666667%;"></a>
    
        <a href="./ch01-introduction.html" title="Introduction" class="chapter done new-chapter" data-progress="2" style="left: 13.333333333333334%;"></a>
    
        <a href="./ch02-the-big-decision.html" title="Client or server? Go big or go home." class="chapter done new-chapter" data-progress="3" style="left: 20%;"></a>
    
        <a href="./ch03-code-for-humans.html" title="Writing code for humans." class="chapter done new-chapter" data-progress="4" style="left: 26.666666666666668%;"></a>
    
        <a href="./ch04-organizing-your-code.html" title="No more clientside spaghetti. Organizing your code." class="chapter done new-chapter" data-progress="5" style="left: 33.333333333333336%;"></a>
    
        <a href="./ch05-eventification.html" title="Using events: Modules talking to modules" class="chapter done new-chapter" data-progress="6" style="left: 40%;"></a>
    
        <a href="./ch06-models.html" title="Models" class="chapter done new-chapter" data-progress="7" style="left: 46.666666666666664%;"></a>
    
        <a href="./ch07-views.html" title="Views and the DOM" class="chapter done new-chapter" data-progress="8" style="left: 53.333333333333336%;"></a>
    
        <a href="./ch08-templating.html" title="Handling templates" class="chapter done new-chapter" data-progress="9" style="left: 60%;"></a>
    
        <a href="./ch09-clientside-routing.html" title="Clientside Routing" class="chapter done " data-progress="10" style="left: 66.66666666666667%;"></a>
    
        <a href="./ch10-launch-sequence.html" title="3... 2... 1... Blastoff!" class="chapter done " data-progress="11" style="left: 73.33333333333333%;"></a>
    
        <a href="./ch11-testing-and-QA.html" title="Testing and QA" class="chapter done " data-progress="12" style="left: 80%;"></a>
    
        <a href="./ch12-settings-and-configs.html" title="Settings and configs" class="chapter done " data-progress="13" style="left: 86.66666666666667%;"></a>
    
        <a href="./ch13-caveats.html" title="Caveats/Gotchas" class="chapter  " data-progress="14" style="left: 93.33333333333333%;"></a>
    
        <a href="./ch14-conclusion.html" title="A few closing thoughts" class="chapter  " data-progress="15" style="left: 100%;"></a>
    
    </div>
</div>

                <div class="page-inner">
                
                    <section class="normal" id="section-gitbook_14">
                    
                        <h1 id="app-settings-and-configuration">App settings and configuration</h1>
<h2 id="the-problem">The problem</h2>
<p>App configuration and environment settings are always a PITA, right? Especially when you&#39;ve got configuration settings you want to pass to your single page app. If we&#39;ve structured everything as building a &quot;static&quot; js file that gets sent, then how do we pass dynamic values into it for things like configuration?</p>
<p>We solve this problem with a simple approach and two specific tools:</p>
<ul>
<li><a href="https://github.com/henrikjoreteg/getconfig" target="_blank">getconfig</a></li>
<li><a href="https://github.com/henrikjoreteg/clientconfig" target="_blank">clientconfig</a></li>
</ul>
<p>They&#39;re in no way dependent on each other but they do play nicely together.  (Both are on npm, by the way).</p>
<h2 id="getconfig">getconfig</h2>
<p>First, getconfig. This is a tool for configuring Node web apps. It follows the same assumptions as <a href="http://expressjs.com/" target="_blank">Express</a> does, in that it looks to an environment variable (NODE_ENV, <a href="http://expressjs.com/api.html#app-settings" target="_blank">reference</a>) to determine the mode in which it should run.</p>
<p>It simply uses that to look for a JSON config file that matches the name of the environment. For example: dev_config.json or production_config.json. It defaults to dev if it doesn&#39;t find one.</p>
<p>Then, from your Node app you just require &quot;getconfig&quot; and access settings directly on the resulting object, which will have pulled it from the correct config file. Super clean/simple:</p>
<pre><code class="lang-javascript"><span class="hljs-comment">// We just require the module</span>
<span class="hljs-keyword">var</span> config = <span class="hljs-built_in">require</span>(<span class="hljs-string">'getconfig'</span>);

<span class="hljs-comment">// Which actually returns our environment-aware config</span>
<span class="hljs-comment">// from the corresponding config file. </span>
config.mySetting;
</code></pre>
<p>It just pulls the right config from the right file, no &quot;if&quot; statements, no mess.</p>
<h2 id="clientconfig">clientconfig</h2>
<p>On the clientside we do something very similar.</p>
<pre><code class="lang-javascript"><span class="hljs-keyword">var</span> config = <span class="hljs-built_in">require</span>(<span class="hljs-string">'clientconfig'</span>);

config.mySetting;
</code></pre>
<p>This time, instead of looking for an environment variable, the module looks for a cookie called &quot;config&quot; that contains a JSON encoded config object. It immediately reads, then destroys that cookie (to avoid the overhead of sending it around on any subsequent requests).</p>
<p>Clientconfig reads and returns a &quot;frozen&quot; config object (using ES5 Object.freeze, if available) with our settings. So, it&#39;s basically the equivalent developer experience as getconfig, but for the client.</p>
<h2 id="using-them-together">Using them together</h2>
<p>In combination, it gets pretty slick:</p>
<p>Say we have a dev_config.json that looks like this, on our server.</p>
<pre><code class="lang-json">{
  "<span class="hljs-attribute">myProjectSetting</span>": <span class="hljs-value"><span class="hljs-string">"someSetting"</span></span>,
  "<span class="hljs-attribute">clientAppSettings</span>": <span class="hljs-value">{
    "<span class="hljs-attribute">apiUrl</span>": <span class="hljs-value"><span class="hljs-string">"https://api.andbang.com"</span></span>,
    "<span class="hljs-attribute">trackMetrics</span>": <span class="hljs-value"><span class="hljs-literal">false</span>
  </span>}
</span>}
</code></pre>
<p>*note the &quot;clientAppSettings&quot; section.</p>
<p>Now, in our main server file where we handle the requests for single page apps, we then add on our config cookie with the data from getconfig using a very simple piece of middleware.</p>
<pre><code class="lang-javascript"><span class="hljs-comment">// Set up our app and require getconfig</span>
<span class="hljs-keyword">var</span> app = <span class="hljs-built_in">require</span>(<span class="hljs-string">'express'</span>)(),
    config = <span class="hljs-built_in">require</span>(<span class="hljs-string">'getconfig'</span>); 

<span class="hljs-comment">// Build a tiny middleware function that sets the cookie</span>
<span class="hljs-keyword">var</span> configMiddleware = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(req, res, next)</span> {</span>
  res.setCookie(<span class="hljs-string">'config'</span>, <span class="hljs-built_in">JSON</span>.stringify(config.clientAppSettings);
  next();
};

<span class="hljs-comment">// In the code that serves our singlepage app, use the middleware</span>
app.get(<span class="hljs-string">'/app'</span>, configMiddleware, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(req, res)</span> {</span>
  res.send(clientApp.html());
});
</code></pre>
<p>Just like that, we&#39;ve got a simple unified config file on our server where we can store all environment specific settings for the whole app. It becomes very painless to pass settings to our clientapp based on our environment without having to think about it. </p>
<p>The other benefit of this approach is that it lets us keep our clientside JS app as a completely static file. We don&#39;t have to do custom builds that write in settings or anything while still avoiding additional HTTP requests to fetch settings.</p>
<h2 id="security-caveats">Security caveats</h2>
<p>Please avoid if sending any valuable settings across the wire this way, especially if you&#39;re not using https. Cookies are just http headers, so it&#39;s best to assume that this is not secure information and thus, should only be used for non-sensitive data.</p>

                    
                    </section>
                
                </div>
            </div>
        </div>

        
        <a href="./ch11-testing-and-QA.html" class="navigation navigation-prev " aria-label="Previous page: Testing and QA"><i class="fa fa-angle-left"></i></a>
        
        
        <a href="./ch13-caveats.html" class="navigation navigation-next " aria-label="Next page: Caveats/Gotchas"><i class="fa fa-angle-right"></i></a>
        
    </div>
</div>

        
<script src="gitbook/jsrepl/jsrepl.js" id="jsrepl-script"></script>
<script src="gitbook/app.js"></script>

    
    <script src="http://cdn.mathjax.org/mathjax/2.0-latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    

    
    <script src="gitbook/plugins/gitbook-plugin-mathjax/plugin.js"></script>
    

<script>
require(["gitbook"], function(gitbook) {
    var config = {};
    gitbook.start(config);
});
</script>

        
    </body>
    
</html>
